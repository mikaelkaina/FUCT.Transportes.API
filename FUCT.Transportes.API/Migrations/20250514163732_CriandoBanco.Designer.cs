// <auto-generated />
using System;
using FUCT.Transportes.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FUCT.Transportes.API.Migrations
{
    [DbContext(typeof(TransportesContext))]
    [Migration("20250514163732_CriandoBanco")]
    partial class CriandoBanco
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FUCT.Transportes.API.Models.Cargueiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Capacidade")
                        .HasColumnType("float");

                    b.Property<string>("Classe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoMinérioCompatível")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cargueiros");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacidade = 5.0,
                            Classe = "I",
                            TipoMinérioCompatível = "D"
                        },
                        new
                        {
                            Id = 2,
                            Capacidade = 3.0,
                            Classe = "II",
                            TipoMinérioCompatível = "A"
                        });
                });

            modelBuilder.Entity("FUCT.Transportes.API.Models.Minério", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Caracteristica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrecoPorKg")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Minerios");
                });

            modelBuilder.Entity("FUCT.Transportes.API.Models.Transporte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CargueiroId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataRetorno")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataSaida")
                        .HasColumnType("datetime2");

                    b.Property<int>("MinérioId")
                        .HasColumnType("int");

                    b.Property<double>("QuantidadeTransportada")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CargueiroId");

                    b.HasIndex("MinérioId");

                    b.ToTable("Transportes");
                });

            modelBuilder.Entity("FUCT.Transportes.API.Models.Transporte", b =>
                {
                    b.HasOne("FUCT.Transportes.API.Models.Cargueiro", "Cargueiro")
                        .WithMany()
                        .HasForeignKey("CargueiroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FUCT.Transportes.API.Models.Minério", "Minério")
                        .WithMany()
                        .HasForeignKey("MinérioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cargueiro");

                    b.Navigation("Minério");
                });
#pragma warning restore 612, 618
        }
    }
}
